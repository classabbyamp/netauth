NetAuth Roadmap

v0.0.1:
  * Authentication works
    * New entities can be added using a super-user account
    * Entities can be removed with a super-user account
    * Entities can be authenticated using a known secret
  * Minimum required entity metadata is available
    * An entity can be designated a global super-user; this is just a capability
    * Starting the server with special options will set this capability on this user
  * Minimum grouping support
    * A meta group "ALL" will return and contain all known entities of the server.

v0.0.2:
  * Authentication Enhancements
    * A super-user can change entities secrets
  * Full entity metadata support
    * All fields can be set on all entities using the RPC interface and CLI tools.
    * metadata can be modified via the CLI by either the owning entity or the super-user
  * Data Enhancements
    * Data is persisted to disk
    * Persistence layer is implemented as a pluggable, runtime selectable backend
    * A basic backend will be built by default, additional backends available via tags

v0.0.3:
  * Group support:
    * Users can be added to flat groups similar to the group file
    * Users can be removed from these flat groups
    * Querying a user will return the groups for them
  * Cluster Support:
    * Multiple write capable masters with access to the data layer are available
    * Initially this will be implemented by making the data layer safe
      to synchronize between multiple masters.  Future cluster
      improvements may involve Paxos based implementations of the data
      storage layer.

v0.0.4:
  * Group Enhancements:
    * Groups can be nested
      * nest expansions can either be include or exclude
      * include is a direct expansion
      * exclude removes the contained entities from the containing group for this lookup
    * Groups can be managed by the CLI
      * groups can be moved around via the CLI

v0.0.5:
  * Entity capabilities
    * capabilities can be used to denote additional access
  * Group capabilities
    * all entities in the group can act with the permissions of that group

At this point a viable release candidate should exist.

v0.0.6:
  * Client and API cleanup
  * Correct codes returned for all errors
  * Errors are constrained to a limited error space

v0.0.7:
  * TLS by default
  * Primary Group for UNIX accounts

v0.0.8:
  * Linter concerns and review fixes
  * Turn off builds of shim interfaces

v0.0.8.1:
  * Add License

v0.0.8.2:
  * Select default UID if none is provided
  * Check key availability before decoding
  * Prompt for secret information

v0.0.8.3:
  * Set a default location for keys
  * Use system username for default entityID

v0.0.8.4:
  * Support prompting for all secure information
  * Ensure efficient reuse of locally cached tokens

v0.0.9:
  * Standardized verbs and flags

v0.0.9.1:
  * Maintenance Release
    * Update logging to ensure useful things are logged
    * Improve test coverage and fix minor correctness bugs

v0.0.9.2:
  * Maintenance Release
    * Improve ensureDataDirectory in PDB
    * Improve test resiliancy on fully writable filesystems

v0.0.10:
  * Untyped Metadata

v0.0.11:
  * Lockable entities
    * A locked entity cannot authenticate
    * Locking requires a specific capability, unlocking another

v0.0.12:
  * Searching in the data layer
  * Tree Hooks
    * Small, testable functions for core components
    * Infrastructure in place for later external hooks
  * Cleanups and DRY in data layer

v0.0.13:
  * Unified server config
  * Better Command implementations
  * Simplify the ListGroups RPC to always take an entity
  * Provide dedicated Search RPC for searching entities and groups
  * Drop dep in favor of go modules

v0.1.0:
  * read-only mode

v0.2.0:
  * Externally loadable plugins via go-plugin
  * Example Policy Hook
    * Secret check rate limiter

v0.3.0:
  * rpc2
  * lint cleanup

v0.3.1:
  * lowercase NetAuth in code as netauth

v0.3.2:
  * Resolve various CLI bugs

v0.3.3:
  * Provide default token cache

v0.3.4:
  * Logging cleanup and improvements

v0.4.0:
  * KV2 improved keying support

v0.4.1:
  * Fixes to config relative loading

v0.4.2:
  * Fixes to startup behavior around search indexes

v0.5.0:
  * New group membership resolver
  * bitcask storage backend
  * nsutil introduced

v0.6.0:
  * Various internal cleanup
  * Improved internal tracing support
  * Mandate go 1.17

v0.6.1:
  * Cleaner internal configuration handling
  * nsutil command to generate a self-signed certificate
